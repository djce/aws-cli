#!/usr/bin/env ruby

require 'cloudsaw'

require "optparse"
opts = ARGV.getopts("vi", "verbose", "item-name", "key=s")

domain_name = ARGV.shift

sdb_client = CloudSaw.create_sdb_client
domain = sdb_client.domains[domain_name]

items = domain.items

if ARGV.size == 1
  query = ARGV.shift
  items = items.where(query)
end

# items = items.select(:console_type)

print "items = ", items.count, "\n"

def dump_item(item, opts)
  puts "  #{item.name.inspect}"

  unless opts["i"] || opts["item-name"]
    attributes = item.attributes.to_a
    if attributes[0] and attributes[0].kind_of? AWS::SimpleDB::Attribute
      attributes.sort_by! { |a| a.name }
    else
      attributes.sort_by! { |a| a[0] }
    end
    attributes.each do |attribute|
      if attribute.kind_of? AWS::SimpleDB::Attribute
        puts "    #{attribute.name.inspect} = #{attribute.values.sort.inspect}"
      else
        name, values = attribute
        puts "    #{name.inspect} = #{values.sort.inspect}"
      end
    end
  end
end

if opts["key"]
  item = items[ opts["key"] ]
  dump_item item, opts
  exit
end

items.select(:all).each do |item|
  dump_item item, opts
end
